openapi: 3.0.0
info:
  title: API сервер для демо-проекта Шесть городов
  description: Список ресурсов и маршрутов сервера Шесть городов
  license:
    name: MIT
    url: https://opensource.org/license/MIT
  version: "1.0.0"
tags:
  - name: products
    description: Действия с карточками товара.
  - name: product
    description: Действия с отдельным товаром.
  - name: users
    description: Действия с пользователями.

paths:
  /users/register:
    post:
      tags:
       -  users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя
        content:
          application/json:
            schema:
              $ref: '#components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "400":
          description: Неправильные регистрационные данные

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
   post:
      tags:
       -  users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля.

      requestBody:
        description: Информация для авторизации существующего пользователя
        content:
          application/json:
            schema:
              $ref: '#components/schemas/authUser'
        required: true

      responses:
        "200":
          description: Пользователь авторизован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "400":
          description: Неправильный логин или пароль.

   get:
      tags:
       -  users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю.

      responses:
        "200":
          description: Пользователь авторизован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "401":
          description: Пользователь не авторизован.

  /users/logout:
   delete:
      tags:
       -  users
      summary: Завершить сеанс пользователя
      description: Завершает сеанс работы - выход из закрытой части приложения.

      responses:
        "204":
          description: Сеанс завершен.


  /products/{productId}:
    post:
      tags:
        - products
      summary: Редактировать карточку
      description: Изменяет существующую карточку от авторизованного пользователя.

      parameters:
        - name: productId
          in: path
          schema:
            type: string
          required: true

      requestBody:
        description: Информация для обновления карточки
        content:
          application/json:
            schema:
              $ref: '#components/schemas/addItem'
        required: true

      responses:
        "201":
          description: Предложение обновлено. Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'

        "400":
          description: Неправильные данные по товару

        "401":
          description: Обновление карточки возможно только для зарегистрированных пользователей.

  /products/{offerId}:
    delete:
      tags:
        - products
      summary: Удалить товар
      description: Удаляет существующую карточку от авторизованного пользователя.

      parameters:
        - name: productId
          in: path
          schema:
            type: string
          required: true

      responses:
        "204":
          description: Товар удален.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'

        "401":
          description: Удаление товара возможно только для зарегистрированных пользователей.

        "404":
          description: Запрашиваемые данные не найдены

  /products:
    get:
      tags:
        - products
      summary: Получить список товаров
      description: Возвращает массив товаров. Каждый товар описан в виде объекта.

      parameters:
        - name: totalItems
          in: path
          schema:
            type: number
          required: true

      responses:
        "200":
          description: Массив товаров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/products'

        "404":
          description: Запрашиваемые данные не найдены

  /products{productId}:
    get:
      tags:
        - products
      summary: Получить карточку товара
      description: Возвращает карточку с идентификатором productId

      parameters:
        - name: productId
          in: path
          schema:
            type: string
          required: true

      responses:
        "200":
          description: Объект товара.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'

        "404":
          description: Товар не найден


components:
  schemas:
    createUser:
     type: object

     properties:
        name:
          type: string
          example: John

        email:
          type: string
          example: mail@mail.com

        password:
          type: string
          example: 123456

    user:
     type: object

     properties:
        name:
          type: string
          example: John

        email:
          type: string
          example: mail@mail.com

        token:
          type: string
          example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=

    authUser:
     type: object

     properties:
        email:
          type: string
          example: mail@mail.com

        password:
          type: string
          example: 123456

    addItem:
     type: object

     properties:
        name:
          type: string
          example: Nice, cozy, warm big bed apartment
        description:
          type: string
          example: 'I am happy to welcome you to my apartment in the city center! Three words: location, cosy and chic!'
        date:
          type: string
          example: ISODate('2023-10-04T19:37:06.828Z')
        photo:
          type: string
          example: image-9.jpg
        type:
          type: string
          example: guitar
        strings:
          type: number
          example: 4
        article:
          type: string
          example: WGF23HF
        price:
          type: number
          example: 100000
        

    product:
     type: object

     properties:
        name:
          type: string
          example: Nice, cozy, warm big bed apartment
        description:
          type: string
          example: 'I am happy to welcome you to my apartment in the city center! Three words: location, cosy and chic!'
        date:
          type: string
          example: ISODate('2023-10-04T19:37:06.828Z')
        photo:
          type: string
          example: image-9.jpg
        type:
          type: string
          example: guitar
        strings:
          type: number
          example: 4
        article:
          type: string
          example: WGF23HF
        price:
          type: number
          example: 100000

    products:
     type: array

     properties:
        name:
          type: string
          example: Nice, cozy, warm big bed apartment
        description:
          type: string
          example: 'I am happy to welcome you to my apartment in the city center! Three words: location, cosy and chic!'
        date:
          type: string
          example: ISODate('2023-10-04T19:37:06.828Z')
        photo:
          type: string
          example: image-9.jpg
        type:
          type: string
          example: guitar
        strings:
          type: number
          example: 4
        article:
          type: string
          example: WGF23HF
        price:
          type: number
          example: 100000

